@*// Copyright (c) 2022 iyarashii @ https://github.com/iyarashii
// Licensed under the GNU General Public License v3.0.*@
@page "/pokedex"
@using System.Net;
@using System.Text.RegularExpressions;
<h3>@PageTitle</h3>
<MudTextField @bind-Value="PokemonName" Label="Pokemon" Variant="Variant.Text"></MudTextField>
<MudButton Variant="Variant.Filled" OnClick="SavePokemonNames" >Save list of pokemon names from Scarlet/Violet</MudButton>
<MudPaper Height="1080px">
    <iframe id="serebiiPokedex" src="@(PokedexSource + PokemonName)" />
</MudPaper>
@code {
    public string PageTitle { get; set; }
    public string PokedexSource { get; set; } = "https://www.serebii.net/pokedex-sv/";
    public string PokemonName { get; set; }
    public async void SavePokemonNames()
    {
        using (HttpClient client = new HttpClient())
        {
            string downloadString = await client.GetStringAsync(PokedexSource);
            var pokemonNameMatches = Regex.Matches(downloadString, "(?<=<option value=\"/pokedex-sv/.+?/\">\\d+? )(.*)(?=</option>)");
            HashSet<string> pokemonNamesToSave = new();
            foreach (Match pokemonNameMatch in pokemonNameMatches)
            {
                pokemonNamesToSave.Add(pokemonNameMatch.Value);
            }
            File.AppendAllLines(pathToPokemonNames, pokemonNamesToSave);
        }
        StateHasChanged();
    }

    public static string GetBetween(string strSource, string strStart, string strEnd)
    {
        if (strSource.Contains(strStart) && strSource.Contains(strEnd))
        {
            int start, end;
            start = strSource.IndexOf(strStart, 0) + strStart.Length;
            end = strSource.IndexOf(strEnd, start);
            return strSource.Substring(start, end - start);
        }

        return "";
    }
}

